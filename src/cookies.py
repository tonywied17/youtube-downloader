import browser_cookie3
from rich.console import Console
console = Console()

class CookieExporter:
    def __init__(self, file_path="cookies.txt", filter_domain=None):
        """
        Initialize the CookieExporter class.
        
        Args:
            file_path (str): The path to save the exported cookies (default is 'cookies.txt').
            filter_domain (str): Optionally, filter cookies by domain (e.g., 'youtube.com').
        """
        self.file_path = file_path
        self.filter_domain = filter_domain

    def export_cookies_to_netscape(self):
        """
        Export cookies from supported browsers to a Netscape-style cookie file.
        This uses the browser_cookie3 library to automatically locate cookie files.
        """
        try:
            #! List of browser methods to call
            browser_methods = [
                browser_cookie3.chrome,
                browser_cookie3.firefox,
                browser_cookie3.edge,
                browser_cookie3.opera,
                browser_cookie3.vivaldi
            ]
            
            cookies = []
            console.print("\n[bold yellow]Checking for browser cookies to export...[/bold yellow]")

            for method in browser_methods:
                try:
                    cookies.extend(method())
                except Exception as e:
                    console.print(f"[yellow]No cookies found for {method.__name__.split('.')[-1]}[/yellow]")
                    
            youtube_cookies = [cookie for cookie in cookies if 'youtube.com' in cookie.domain]
            console.print(f"[blue]({len(youtube_cookies)}) cookies found for youtube.com in {method.__name__.split('.')[-1]}[/blue]")

            #* Filter cookies by domain if specified
            if self.filter_domain:
                cookies = [cookie for cookie in cookies if self.filter_domain in cookie.domain]

            #* Remove duplicate cookies based on domain and name
            unique_cookies = {}
            for cookie in cookies:
                key = (cookie.domain, cookie.name)
                if key not in unique_cookies:
                    unique_cookies[key] = cookie

            cookies = list(unique_cookies.values())

            if cookies:
                with open(self.file_path, 'w') as f:
                    f.write("# Netscape HTTP Cookie File\n")
                    f.write("# This file is generated by browser_cookie3.\n")
                    f.write("# Format: domain\tflag\tpath\tsecure\texpiration\tname\tvalue\n\n")
                    
                    for cookie in cookies:
                        f.write(f"{cookie.domain}\t"
                                f"{'TRUE' if cookie.domain.startswith('.') else 'FALSE'}\t"
                                f"{cookie.path}\t"
                                f"{'TRUE' if cookie.secure else 'FALSE'}\t"
                                f"{int(cookie.expires) if cookie.expires else 0}\t"
                                f"{cookie.name}\t"
                                f"{cookie.value}\n")
                console.print(f"\n[green]Cookies exported:[/green] {self.file_path}\n")
            else:
                console.print("\n[yellow]No cookies found to export. Please ensure you have logged into https://www.youtube.com and then [bold]close the browser[/bold] before running this program.[/yellow]")
        except Exception as e:
            console.print(f"\n[red]Error exporting cookies: {e}[/red]") 
            console.print("\n[yellow]Please ensure you have logged into https://www.youtube.com and then [bold]close the browser[/bold] before running this program.[/yellow]")